 Mysql SQL优化&执行计划
SQL优化准则

禁用select *
使用select count(*) 统计行数
尽量少运算
尽量避免全表扫描，如果可以，在过滤列建立索引
尽量避免在where子句对字段进行null判断
尽量避免在where子句使用!= 或者<>
尽量避免在where子句使用or连接
尽量避免对字段进行表达式计算
尽量避免对字段进行函数操作
尽量避免使用不是复合索引的前缀列进行过滤连接
尽量少排序，如果可以，建立索引
尽量少join
尽量用join代替子查询
尽量避免在where子句中使用in,not in或者having，使用exists,not exists代替
尽量避免两端模糊匹配 like %***%
尽量用union all代替union
尽量早过滤
避免类型转换
尽量批量insert
优先优化高并发sql，而不是频率低的大sql
尽可能对每一条sql进行explain
尽可能从全局出发

SQL执行计划

在mysql命令行中，执行explain命令可以看到sql执行计划，如下图所示：
Alt text
ID

Id:包含一组数字，表示查询中执行select子句或操作表的顺序

id相同，可以认为是一组，执行顺序由上至下
如果是子查询，id的序号会递增
id值越大优先级越高，越先被执行

select_type

select_type:表示查询中每个select子句的类型（简单 、复杂）

SIMPLE：查询中不包含子查询或者UNION
PRIMARY：查询中若包含任何复杂的子部分，最外层查询则被标记为PRIMARY
SUBQUERY：在SELECT或WHERE列表中包含了子查询，该子查询被标记为SUBQUERY
DERIVED：在FROM列表中包含的子查询被标记为DERIVED（衍生）。若UNION包含在  FROM子句的子查询中，外层SELECT将被标记为DERIVED
UNION：若第二个SELECT出现在UNION之后，则被标记为UNION
UNION RESULT：从UNION表获取结果的SELECT被标记为UNION RESULT

table

输出的行所引用的表
type

Type：表示MySQL在表中找到所需行的方式，又称“访问类型”

ALL：Full Table Scan， MySQL将遍历全表以找到匹配的行
index：Full Index Scan，index与ALL区别为index类型只遍历索引树
range：索引范围扫描，对索引的扫描开始于某一点，返回匹配值域的行，常见于between、<、>等的查询
ref：非唯一性索引扫描，返回匹配某个单独值的所有行。常见于使用非唯一索引即唯一索引的非唯一前缀进行的查找
eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描
const、system：当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。如将主键置于where列表中，MySQL就能将该查询转换为一个常量。system是const类型的特例，当查询的表只有一行的情况下， 使用system
NULL：MySQL在优化过程中分解语句，执行时甚至不用访问表或索引

possible_keys

指出MySQL能使用哪个索引在表中找到行，查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询使用。
key

显示MySQL在查询中实际使用的索引，若没有使用索引，显示为NULL。查询中若使用了覆盖索引，则该索引仅出现在key列表中。
key_len

表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。显示的值为索引字段的最大可能长度，并非实际使用长度，即key_len是根据表定义计算而得，不是通过表内检索出的。
row

表示MySQL根据表统计信息及索引选用情况，估算的找到所需的记录所需要读取的行数。
Extra

包含不适合在其他列中显示但十分重要的额外信息

Using index：该值表示相应的select操作中使用了覆盖索引（Covering Index）【注：MySQL可以利用索引返回select列表中的字段，而不必根据索引再次读取数据文件  包含所有满足查询需要的数据的索引称为 覆盖索引】
Using where：表示MySQL服务器在存储引擎受到记录后进行“后过滤”（Post-filter）,如果查询未能使用索引，Using where的作用只是提醒我们MySQL将用where子句来过滤结果集
Using temporary：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询
Using filesort：  MySQL中无法利用索引完成的排序操作称为“文件排序”

